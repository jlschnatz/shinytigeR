% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_postanalysis.R
\name{duck_download_files}
\alias{duck_download_files}
\title{Download Files from a Remote Server using Duck}
\usage{
duck_download_files(.x, .user, .cmd, .rsa_path, .return_path)
}
\arguments{
\item{.x}{A character vector of relative filepaths on the remote server to be downloaded.}

\item{.user}{A character specifying the username for the server connection.}

\item{.cmd}{A character specifying the path to the Duck executable on the local machine.}

\item{.rsa_path}{A character specifying the path to the RSA private key for authentication.}

\item{.return_path}{A character vector specifying the local destination paths to save the downloaded files.}
}
\description{
This function allows the user to download files from a remote server using the Duck command-line tool.
Duck is a command-line SFTP client that facilitates secure file transfers.
}
\details{
The function connects to the remote server using the provided credentials and downloads files specified by the filepaths in \code{.x}.
The downloaded files are saved locally at the paths specified in \code{.return_path}.

Note: This function requires a connection to the Goethe University VPN to access the remote server.
}
\examples{
\dontrun{
# Example usage:
.cmd <- "/opt/homebrew/bin/duck"
.rsa_path <- "/Users/luca/.ssh/id_rsa"
.return_path <- "/Users/luca/Desktop/db_user.sqlite"
.user <- "beitner"
.x <- "shinyapps/shinytigeR-DB/db_user.sqlite"

duck_download_files(.x, .user, .cmd, .rsa_path, .return_path)
}

}
\seealso{
\code{\link{pool_connect}}
}
